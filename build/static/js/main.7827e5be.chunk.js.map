{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/services/imageApi.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["Searchbar","state","querry","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","props","onSubmitForm","resetForm","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","largeImageURL","onClick","src","alt","ImageGallery","images","map","id","key","axios","defaults","baseURL","tempQuery","page","pageSize","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeydown","e","code","onToggle","handleBackdrop","currentTarget","window","addEventListener","removeEventListener","image","createPortal","App","isLoading","error","isModal","currentImage","query","fetchImages","imageApi","prevState","catch","finally","toggleModal","handleImageClick","prevProps","color","height","width","timeout","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7827e5be.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n  state = { querry: '' };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { querry } = this.state;\n\n    this.props.onSubmitForm(querry);\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({ querry: '' });\n  }\n\n  render() {\n    const { querry } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={querry}\n            name=\"querry\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ largeImageURL, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={largeImageURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        onClick={() => onClick(largeImageURL)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport './imageGallery.css';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          largeImageURL={largeImageURL}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://pixabay.com/api`;\nconst key = '15335166-46184c58e4c8bb577f38781ce';\nconst imageAxios = ({ tempQuery = '', page = 1, pageSize = 9 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${key}&q=${tempQuery}&page=${page}&per_page=${pageSize}&orientation=horizontal&image_type=photo/`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default { imageAxios };\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggle();\n    }\n  };\n\n  handleBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggle();\n    }\n  };\n\n  render() {\n    const { image } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\n        <div className=\"Modal\">\n          <img className=\"Modal\" src={image} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  image: PropTypes.string.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\n\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport imageApi from './services/imageApi';\nimport Modal from './Modal';\n\nimport Loader from 'react-loader-spinner';\nimport './index.css';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    tempQuery: '',\n    page: 1,\n    isLoading: false,\n    error: null,\n    isModal: false,\n    currentImage: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevTempQuery = prevState.tempQuery;\n    const nextTempQuery = this.state.tempQuery;\n\n    if (prevTempQuery !== nextTempQuery) {\n      return this.fetchImages();\n    }\n  }\n\n  onSubmitForm = query => {\n    this.setState({ tempQuery: query, images: [], page: 1, error: null });\n  };\n  fetchImages = () => {\n    const { page, tempQuery } = this.state;\n    this.setState({ isLoading: true });\n    const options = {\n      tempQuery,\n      page,\n    };\n    imageApi\n      .imageAxios(options)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = image => {\n    this.setState(prevState => ({\n      isModal: !prevState.isModal,\n      currentImage: prevState.isModal ? null : image,\n    }));\n  };\n\n  handleImageClick = image => {\n    this.toggleModal(image);\n  };\n\n  render() {\n    const { images, isLoading, error, isModal, currentImage } = this.state;\n\n    return (\n      <>\n        {isModal && <Modal image={currentImage} onToggle={this.toggleModal} />}\n        {error && <h1>ERROR</h1>}\n        <Searchbar onSubmitForm={this.onSubmitForm} />\n\n        <ImageGallery images={images} onClick={this.handleImageClick} />\n        <div className=\"button_and_loader\">\n          {isLoading && (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000}\n            />\n          )}\n          {images.length > 0 && !isLoading && (\n            <button className=\"Button\" type=\"button\" onClick={this.fetchImages}>\n              Next\n            </button>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}